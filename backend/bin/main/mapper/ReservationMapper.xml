<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.ac.hanyang.backend.mapper.ReservationMapper">

    <!-- FOR UPDATE를 사용하여 특정 슬롯에 락을 걸고, 이미 예약이 있는지 확인 -->
    <!-- 한 사람이 여러 슬롯을 예약할 수 있으므로, 요청된 slot이 기존 예약의 start_slot과 end_slot 사이에 있는지 확인 -->
    <select id="isSlotBookedForUpdate" resultType="Integer">
        SELECT 1
        FROM reservations
        WHERE room_id = #{roomId}
          AND date = #{date}
          AND #{slot} BETWEEN start_slot AND end_slot
          AND status = 'RESERVED'
        LIMIT 1
        FOR UPDATE
    </select>

    <insert id="insertReservation" useGeneratedKeys="true" keyProperty="id"
            parameterType="kr.ac.hanyang.backend.dto.Reservation">
        INSERT INTO reservations (user_id, room_id, date, start_slot, end_slot, status)
        VALUES (#{userId}, #{roomId}, #{date}, #{startSlot}, #{endSlot}, #{status})
    </insert>

    <select id="getReservationsByDate" resultType="kr.ac.hanyang.backend.dto.Reservation">
        SELECT
            id, user_id, room_id, date, start_slot, end_slot, status, checkin_time, created_at
        FROM reservations
        WHERE date = #{date} AND status = 'RESERVED'
    </select>

    <select id="getTotalReservedSlotsByUserIdAndDate" resultType="Integer">
        SELECT COALESCE(SUM(end_slot - start_slot + 1), 0)
        FROM reservations
        WHERE user_id = #{userId}
          AND date = #{date} AND status = 'RESERVED'
    </select>

    <select id="findByUserId" resultType="kr.ac.hanyang.backend.dto.Reservation">
        SELECT
            id, user_id, room_id, date, start_slot, end_slot, status, checkin_time, created_at
        FROM reservations
        WHERE user_id = #{userId} AND status != 'CANCELLED'
        ORDER BY date, start_slot
    </select>

    <select id="findById" resultType="kr.ac.hanyang.backend.dto.Reservation">
        SELECT
            id, user_id, room_id, date, start_slot, end_slot, status, checkin_time, created_at
        FROM reservations
        WHERE id = #{id}
    </select>

    <delete id="deleteById">
        DELETE FROM reservations
        WHERE id = #{id}
    </delete>

</mapper>
