<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.ac.hanyang.backend.mapper.ReservationMapper">

    <!-- FOR UPDATE를 사용하여 특정 슬롯에 락을 걸고, 이미 예약이 있는지 확인 -->
    <!-- 한 사람이 여러 슬롯을 예약할 수 있으므로, 요청된 slot이 기존 예약의 start_slot과 end_slot 사이에 있는지 확인 -->
    <select id="isSlotBookedForUpdate" resultType="Integer">
        SELECT 1
        FROM reservations
        WHERE room_id = #{roomId}
          AND date = #{date}
          AND #{slot} BETWEEN start_slot AND end_slot
          AND status = 'RESERVED'
        LIMIT 1
        FOR UPDATE
    </select>

    <insert id="insertReservation" useGeneratedKeys="true" keyProperty="id"
            parameterType="kr.ac.hanyang.backend.dto.Reservation">
        INSERT INTO reservations (user_id, room_id, date, start_slot, end_slot, status, checkin_required)
        VALUES (#{userId}, #{roomId}, #{date}, #{startSlot}, #{endSlot}, #{status}, #{checkinRequired})
    </insert>

    <select id="getReservationsByDate" resultType="kr.ac.hanyang.backend.dto.Reservation">
        SELECT
            id, user_id, room_id, date, start_slot, end_slot, status, checkin_time, checkin_required, created_at
        FROM reservations
        WHERE date = #{date} AND status = 'RESERVED'
    </select>

    <select id="getTotalReservedSlotsByUserIdAndDate" resultType="Integer">
        SELECT COALESCE(SUM(end_slot - start_slot + 1), 0)
        FROM reservations
        WHERE user_id = #{userId}
          AND date = #{date} AND status = 'RESERVED'
    </select>

    <select id="findByUserId" resultType="kr.ac.hanyang.backend.dto.Reservation">
        SELECT
            id, user_id, room_id, date, start_slot, end_slot, status, checkin_time, checkin_required, created_at
        FROM reservations
        WHERE user_id = #{userId} AND status != 'CANCELLED'
        ORDER BY date, start_slot
    </select>

    <select id="findById" resultType="kr.ac.hanyang.backend.dto.Reservation">
        SELECT
            id, user_id, room_id, date, start_slot, end_slot, status, checkin_time, checkin_required, created_at
        FROM reservations
        WHERE id = #{id}
    </select>

    <delete id="deleteById">
        DELETE FROM reservations
        WHERE id = #{id}
    </delete>

    <!-- 관리자용: 모든 예약 조회 (지난 예약 제외) -->
    <select id="findAll" resultType="kr.ac.hanyang.backend.dto.Reservation">
        SELECT
            id, user_id, room_id, date, start_slot, end_slot, status, checkin_time, checkin_required, created_at
        FROM reservations
        WHERE (date > CURDATE()) 
           OR (date = CURDATE() AND end_slot >= (HOUR(NOW()) * 2 + IF(MINUTE(NOW()) >= 30, 1, 0)))
        ORDER BY date DESC, start_slot ASC
    </select>

    <!-- 관리자용: 현재 진행 중인 예약 조회 -->
    <select id="getCurrentReservations" resultType="kr.ac.hanyang.backend.dto.Reservation">
        SELECT
            id, user_id, room_id, date, start_slot, end_slot, status, checkin_time, checkin_required, created_at
        FROM reservations
        WHERE date = CURDATE() 
          AND status = 'RESERVED'
          AND start_slot &lt;= (HOUR(NOW()) * 2 + IF(MINUTE(NOW()) >= 30, 1, 0))
          AND end_slot >= (HOUR(NOW()) * 2 + IF(MINUTE(NOW()) >= 30, 1, 0))
        ORDER BY start_slot ASC
    </select>

    <!-- 체크인 시간 업데이트 -->
    <update id="updateCheckinTime">
        UPDATE reservations 
        SET checkin_time = NOW() 
        WHERE id = #{id}
    </update>

    <!-- 예약 상태 업데이트 -->
    <update id="updateStatus">
        UPDATE reservations 
        SET status = #{status}
        WHERE id = #{id}
    </update>

</mapper>
